// This file was generated by counterfeiter
package fakes

import (
	"sync"
	"time"

	"github.com/cloudfoundry/storeadapter"
)

type FakeRetryPolicy struct {
	DelayForStub        func(int) (time.Duration, bool)
	delayForMutex       sync.RWMutex
	delayForArgsForCall []struct {
		arg1 int
	}
	delayForReturns struct {
		result1 time.Duration
		result2 bool
	}
}

func (fake *FakeRetryPolicy) DelayFor(arg1 int) (time.Duration, bool) {
	fake.delayForMutex.Lock()
	fake.delayForArgsForCall = append(fake.delayForArgsForCall, struct {
		arg1 int
	}{arg1})
	fake.delayForMutex.Unlock()
	if fake.DelayForStub != nil {
		return fake.DelayForStub(arg1)
	} else {
		return fake.delayForReturns.result1, fake.delayForReturns.result2
	}
}

func (fake *FakeRetryPolicy) DelayForCallCount() int {
	fake.delayForMutex.RLock()
	defer fake.delayForMutex.RUnlock()
	return len(fake.delayForArgsForCall)
}

func (fake *FakeRetryPolicy) DelayForArgsForCall(i int) int {
	fake.delayForMutex.RLock()
	defer fake.delayForMutex.RUnlock()
	return fake.delayForArgsForCall[i].arg1
}

func (fake *FakeRetryPolicy) DelayForReturns(result1 time.Duration, result2 bool) {
	fake.DelayForStub = nil
	fake.delayForReturns = struct {
		result1 time.Duration
		result2 bool
	}{result1, result2}
}

var _ storeadapter.RetryPolicy = new(FakeRetryPolicy)
